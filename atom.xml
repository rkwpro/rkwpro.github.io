<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rkw&amp;blog</title>
  
  
  <link href="https://blog.rkwcloud.com/atom.xml" rel="self"/>
  
  <link href="https://blog.rkwcloud.com/"/>
  <updated>2022-09-24T04:17:49.041Z</updated>
  <id>https://blog.rkwcloud.com/</id>
  
  <author>
    <name>rkwPro</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ccc</title>
    <link href="https://blog.rkwcloud.com/2022/09/24/ccc/"/>
    <id>https://blog.rkwcloud.com/2022/09/24/ccc/</id>
    <published>2022-09-24T04:06:50.000Z</published>
    <updated>2022-09-24T04:17:49.041Z</updated>
    
    <content type="html"><![CDATA[<p>对于系统的进一步维护</p>]]></content>
    
    
    <summary type="html">1</summary>
    
    
    
    
    <category term="1" scheme="https://blog.rkwcloud.com/tags/1/"/>
    
  </entry>
  
  <entry>
    <title>java学习遇到的小知识点</title>
    <link href="https://blog.rkwcloud.com/2022/09/24/java%E5%AD%A6%E4%B9%A0%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://blog.rkwcloud.com/2022/09/24/java%E5%AD%A6%E4%B9%A0%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/</id>
    <published>2022-09-24T00:40:33.000Z</published>
    <updated>2022-09-24T00:41:43.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="为什么-JUnit-测试方法必须是void？"><a href="#为什么-JUnit-测试方法必须是void？" class="headerlink" title="为什么 JUnit 测试方法必须是void？"></a><a href="https://stackoverflow.com/questions/51578581/why-junit-test-methods-need-to-be-void">为什么 JUnit 测试方法必须是void？</a></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;为什么-JUnit-测试方法必须是void？&quot;&gt;&lt;a href=&quot;#为什么-JUnit-测试方法必须是void？&quot; class=&quot;headerlink&quot; title=&quot;为什么 JUnit 测试方法必须是void？&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://sta</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>IO流</title>
    <link href="https://blog.rkwcloud.com/2022/09/21/IO%E6%B5%81/"/>
    <id>https://blog.rkwcloud.com/2022/09/21/IO%E6%B5%81/</id>
    <published>2022-09-21T00:21:40.000Z</published>
    <updated>2022-09-21T00:26:17.490Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/IO%E6%B5%81_md_files/f0014300-3943-11ed-bfd0-b77f97fe7a16.jpeg?v=1&type=image"><br><img src="/IO%E6%B5%81_md_files/c036ead0-3943-11ed-bfd0-b77f97fe7a16.jpeg?v=1&type=image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/IO%E6%B5%81_md_files/f0014300-3943-11ed-bfd0-b77f97fe7a16.jpeg?v=1&amp;type=image&quot;&gt;&lt;br&gt;&lt;img src=&quot;/IO%E6%B5%81_md_files/c036ead0-39</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JDBC知识</title>
    <link href="https://blog.rkwcloud.com/2022/09/21/JDBC%E7%9F%A5%E8%AF%86/"/>
    <id>https://blog.rkwcloud.com/2022/09/21/JDBC%E7%9F%A5%E8%AF%86/</id>
    <published>2022-09-20T23:51:07.000Z</published>
    <updated>2022-09-24T01:42:36.584Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/JDBC%E7%9F%A5%E8%AF%86_md_files/223ba310-393f-11ed-bfd0-b77f97fe7a16.jpeg?v=1&type=image"><br>JDBC提供了一套工业标准，具体实现就是各个数据库的厂家自己写驱动去适配了<br><img src="/JDBC%E7%9F%A5%E8%AF%86_md_files/59cb76b0-3940-11ed-bfd0-b77f97fe7a16.jpeg?v=1&type=image"><br>图形化界面与Java操作的映射<br>创建Connection<br><img src="/JDBC%E7%9F%A5%E8%AF%86_md_files/8a920930-3940-11ed-bfd0-b77f97fe7a16.jpeg?v=1&type=image"><br>创建statement对象<br><img src="/JDBC%E7%9F%A5%E8%AF%86_md_files/def63140-3940-11ed-bfd0-b77f97fe7a16.jpeg?v=1&type=image"></p><ul><li><p>标准</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConnectTest</span> &#123;  </span><br><span class="line">    <span class="meta">@Test</span>  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ConnectTest1</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;  </span><br><span class="line">        <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.mysql.jdbc.Driver();  </span><br><span class="line">  <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;  </span><br><span class="line">  <span class="type">Properties</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();  </span><br><span class="line">  url = <span class="string">&quot;jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8&quot;</span>;  </span><br><span class="line">  info.setProperty(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;root&quot;</span>);  </span><br><span class="line">  info.setProperty(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>);  </span><br><span class="line">  <span class="type">Connection</span> <span class="variable">connect</span> <span class="operator">=</span> driver.connect(url, info);  </span><br><span class="line">  System.out.println(connect);  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>代码更通用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ConnectTest2</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;  </span><br><span class="line">    Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);  </span><br><span class="line">  Constructor&lt;?&gt; consts = clazz.getConstructor();  </span><br><span class="line">  <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> (Driver) consts.newInstance();  </span><br><span class="line">  <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;  </span><br><span class="line">  <span class="type">Properties</span> <span class="variable">info</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>();  </span><br><span class="line">  url = <span class="string">&quot;jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8&quot;</span>;  </span><br><span class="line">  info.setProperty(<span class="string">&quot;user&quot;</span>,<span class="string">&quot;root&quot;</span>);  </span><br><span class="line">  info.setProperty(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;123456&quot;</span>);  </span><br><span class="line">  <span class="type">Connection</span> <span class="variable">connect</span> <span class="operator">=</span> driver.connect(url, info);  </span><br><span class="line">  System.out.println(connect);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用DriverManager替代Driver</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Test</span>  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ConnectTest3</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;  </span><br><span class="line">        <span class="comment">//1.获取Driver实现类的对象  </span></span><br><span class="line">  Class&lt;?&gt; clazz = Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);  </span><br><span class="line">  Constructor&lt;?&gt; consts = clazz.getConstructor();  </span><br><span class="line">  <span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> (Driver) consts.newInstance();  </span><br><span class="line">  <span class="comment">//2.提供三个连接的基本信息  </span></span><br><span class="line">  <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;  </span><br><span class="line">  url = <span class="string">&quot;jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8&quot;</span>;  </span><br><span class="line">  <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;  </span><br><span class="line">  <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;  </span><br><span class="line">  <span class="comment">//        3注册驱动  </span></span><br><span class="line">  DriverManager.registerDriver(driver);  </span><br><span class="line"><span class="comment">//        4获取连接  </span></span><br><span class="line">  <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);  </span><br><span class="line">  System.out.println(conn);  </span><br><span class="line">  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>更加简洁的应用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ConnectTest4</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;  </span><br><span class="line">    <span class="comment">//2.提供三个连接的基本信息  </span></span><br><span class="line">  <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;  </span><br><span class="line">  url = <span class="string">&quot;jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8&quot;</span>;  </span><br><span class="line">  <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;  </span><br><span class="line">  <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;  </span><br><span class="line">  <span class="comment">//注册驱动，这里可以不写，原因在引用中讲  </span></span><br><span class="line">  Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);  </span><br><span class="line">  </span><br><span class="line">  <span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, user, password);  </span><br><span class="line">  System.out.println(conn);  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分引用</p></li><li><p>我们一直用class.forname()<br>，这句代码是为了加载驱动。其实jdbc4.0以后我们不需要再写这块代码。DriverManage已经增加自动加载驱动包的功能。当然前提是你的工程有相关的数据库驱动包。。DM会去jar包的meta-inf&#x2F;services寻找文件该文件记录了驱动信息。</p><p>所以我们不需要再class.forname()去加载驱动类了</p></li></ul><p><img src="/JDBC%E7%9F%A5%E8%AF%86_md_files/09fc6ee0-3987-11ed-8d3a-a72f345b16e8.jpeg?v=1&type=image"><br>preparedstatement比statement好用（都是传递sql的）<br><img src="/JDBC%E7%9F%A5%E8%AF%86_md_files/f96c4e90-3ba9-11ed-9ab1-b9482d8af0dd.jpeg?v=1&type=image"><br><img src="/JDBC%E7%9F%A5%E8%AF%86_md_files/10ddbdc0-3baa-11ed-9ab1-b9482d8af0dd.jpeg?v=1&type=image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/JDBC%E7%9F%A5%E8%AF%86_md_files/223ba310-393f-11ed-bfd0-b77f97fe7a16.jpeg?v=1&amp;type=image&quot;&gt;&lt;br&gt;JDBC提供了一套工业标准，具体实现就是各个数据库的厂家自己写驱</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据库常用知识</title>
    <link href="https://blog.rkwcloud.com/2022/09/20/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86/"/>
    <id>https://blog.rkwcloud.com/2022/09/20/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86/</id>
    <published>2022-09-20T11:25:49.000Z</published>
    <updated>2022-09-20T11:26:09.670Z</updated>
    
    <content type="html"><![CDATA[<p>都是123456<br>停止服务：net stop mysql80<br>启动服务：net start mysql80<br>登录服务:mysql -u root -p<br>查看内容：show databases;<br>打开数据库：use （数据库名字）；<br>DB:数据库<br>DBMS:数据库管理系统<br>SQL:结构化查询语言，用于和数据库通信的语言<br>展示表：show tables;<br>定点访问数据库表：show tables from (数据库名字)；<br>查看自己当前所在库：select database();<br>创建个表：create table （表 名）（属性）；<br>数据库中的字符串叫varchar();<br>看表的结构：desc （表 名）；<br>查看表里的数据：select * from (表 名)；<br>插入一条数据：insert into stuinfo (id,name) values(13,’Alice’);<br>修改数据： update stuinfo set name&#x3D;’hello’ where id &#x3D;1;<br>删除：delete from stuinfo where id&#x3D;1;<br>查看当前版本：select version();或者在cmd中输入mysql –version或mysql –V<br>单行注释：#注释</p><p>单行注释：–<space>注释</p><p>多行注释：&#x2F;*  *&#x2F; 注释</p><p>USE myemployees;#启用库<br>SELECT VERSION() AS（as可省略） 版本号;（起别名）</p><p>对字段的重复数字去重：SELECT DISTINCT <code>department_id</code> FROM employees;<br>把 两 个 字段连接起来：SELECT CONCAT(<code>last_name</code>,<code>first_name</code>) AS 姓名 FROM employees;<br>IFNULL函数：可以通过IFNULL（可能为null的字段，如果为null把值改为）；<br>条件查询<br>sectect 查询列表 from 表名 where 筛选条件；<br>——————————··<br>last_name LIKE ‘<em>$</em>%’ ESCAPE ‘$’;#通过告诉系统’$’表示转义 </p><p>&#x3D;或&lt;&gt;不能判断null，只能用is或is not<br>分组后筛选用having<br>分组前的筛选用where</p><p>#按表达式</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;都是123456&lt;br&gt;停止服务：net stop mysql80&lt;br&gt;启动服务：net start mysql80&lt;br&gt;登录服务:mysql -u root -p&lt;br&gt;查看内容：show databases;&lt;br&gt;打开数据库：use （数据库名字）；&lt;br&gt;DB:</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>java反射</title>
    <link href="https://blog.rkwcloud.com/2022/09/16/java%E5%8F%8D%E5%B0%84/"/>
    <id>https://blog.rkwcloud.com/2022/09/16/java%E5%8F%8D%E5%B0%84/</id>
    <published>2022-09-16T11:05:11.000Z</published>
    <updated>2022-09-16T11:58:44.787Z</updated>
    
    <content type="html"><![CDATA[<p>Tip:就是照镜子那种方式,打个比方，<strong>反射机制就像是一面镜子，而类就像是一个在照着镜子的人。</strong></p><p><strong>镜子（反射机制）照出（反射）了人的全貌（类的全方位的信息，例如方法，成员变量和构造器等的相关信息）</strong><br><img src="https://ask.qcloudimg.com/http-save/yehe-1148650/ke3squnyyf.png?imageView2/2/w/1620"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Tip:就是照镜子那种方式,打个比方，&lt;strong&gt;反射机制就像是一面镜子，而类就像是一个在照着镜子的人。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;镜子（反射机制）照出（反射）了人的全貌（类的全方位的信息，例如方法，成员变量和构造器等的相关信息）&lt;/strong&gt;</summary>
      
    
    
    
    
    <category term="JAVA" scheme="https://blog.rkwcloud.com/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>spring5</title>
    <link href="https://blog.rkwcloud.com/2022/07/19/spring5/"/>
    <id>https://blog.rkwcloud.com/2022/07/19/spring5/</id>
    <published>2022-07-19T08:20:56.000Z</published>
    <updated>2022-07-28T17:58:58.504Z</updated>
    
    <content type="html"><![CDATA[<h3 id="只要是框架那么一定是解放生产力的工具，就像sh脚本解放重复工作"><a href="#只要是框架那么一定是解放生产力的工具，就像sh脚本解放重复工作" class="headerlink" title="只要是框架那么一定是解放生产力的工具，就像sh脚本解放重复工作"></a>只要是框架那么一定是解放生产力的工具，就像sh脚本解放重复工作</h3><h1 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h1><ul><li>IOC：控制放权</li><li>AOP:对功能进行增强</li><li></li></ul><h2 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h2><h3 id="什么是IOC"><a href="#什么是IOC" class="headerlink" title="什么是IOC"></a>什么是IOC</h3><ul><li>把对象的创建不是主动出击，而是被动注入</li><li>通过spring的IOC进行控制翻转</li></ul><h3 id="IOC底层原理"><a href="#IOC底层原理" class="headerlink" title="IOC底层原理"></a>IOC底层原理</h3><ul><li>xml解析，工厂模式，反射</li><li><img src="/spring5_md_files/dbd38e90-0ccc-11ed-ad87-49ed06965959.jpeg?v=1&type=image"><br> <img src="/spring5_md_files/d0270d90-0cce-11ed-ad87-49ed06965959.jpeg?v=1&type=image"><br> 这样变化了直接改配置文件就行，就是降低了耦合度</li></ul><h3 id="IOC本质（就是个工厂）"><a href="#IOC本质（就是个工厂）" class="headerlink" title="IOC本质（就是个工厂）"></a>IOC本质（就是个工厂）</h3><h4 id="spring提供了IOC实现容器实现的两种方式："><a href="#spring提供了IOC实现容器实现的两种方式：" class="headerlink" title="spring提供了IOC实现容器实现的两种方式："></a>spring提供了IOC实现容器实现的两种方式：</h4><ul><li>（1）BeanFactory() &#x2F;&#x2F;一般不用，是spring内部使用（用的时候才创对象）</li><li>（2）ApplicationContext &#x2F;&#x2F; BeanFactory()的子接口，功能更多，多用（创建对象的时候就会用）<br>-<img src="/spring5_md_files/3cc0c2b0-0cd0-11ed-ad87-49ed06965959.jpeg?v=1&type=image" alt="功能如下"></li><li>就是读取xml文件的东西，获取以后创对象用的</li></ul><h3 id="IOC的bean管理"><a href="#IOC的bean管理" class="headerlink" title="IOC的bean管理"></a>IOC的bean管理</h3><ul><li>1.<strong>spring</strong> 创（new）对象，</li><li>2.<strong>spring</strong> 注入属性。&#x2F;&#x2F; 就是原来的set方法，emm就是说的高级了点</li></ul><h3 id="bean管理实现方式"><a href="#bean管理实现方式" class="headerlink" title="bean管理实现方式"></a>bean管理实现方式</h3><ul><li>1.基于xml配置方式</li></ul><h4 id=""><a href="#" class="headerlink" title=""></a><img src="/spring5_md_files/fa74a970-0e9c-11ed-96b5-e5105b828894.jpeg?v=1&type=image"></h4><h5 id="（1）在spring配置文件中，配置属性"><a href="#（1）在spring配置文件中，配置属性" class="headerlink" title="（1）在spring配置文件中，配置属性"></a>（1）在spring配置文件中，配置属性</h5><pre><code>    id是标识，但是和对象名可以不一致，id是唯一的    class属性，写一个创建类所需的全路径</code></pre><h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><ul><li>2.基于注释方式实现<br>-（1）DI:依赖注入，注入属性<br>-（2）</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;只要是框架那么一定是解放生产力的工具，就像sh脚本解放重复工作&quot;&gt;&lt;a href=&quot;#只要是框架那么一定是解放生产力的工具，就像sh脚本解放重复工作&quot; class=&quot;headerlink&quot; title=&quot;只要是框架那么一定是解放生产力的工具，就像sh脚本解放重复工</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>css</title>
    <link href="https://blog.rkwcloud.com/2022/06/26/css/"/>
    <id>https://blog.rkwcloud.com/2022/06/26/css/</id>
    <published>2022-06-26T09:05:02.000Z</published>
    <updated>2022-06-26T12:58:39.640Z</updated>
    
    <content type="html"><![CDATA[<p>css是按照步骤去渲染的，如果有同一属性给了值，那么按照从上到下的顺序进行覆盖<br>我们所知的伪选择器就是状态选择器对于一个元素状态的定义<br>for example：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">input:hover&#123;</span><br><span class="line">/*表示如果鼠标点击进行了聚焦那么，元素将会变为内容框中的信息    */</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">input:hover&#123;</span><br><span class="line">/*表示如果鼠标点击进行了聚焦那么，元素将会变为内容框中的信息    */</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">transform:scale(1,2); /*放大元素到120%*/</span><br><span class="line">transition:ms  /*转化的过渡时间*/</span><br><span class="line">配合伪选择器使用</span><br></pre></td></tr></table></figure><p>odd奇数<br>even偶数<br><img src="/css_md_files/6d1ae7a0-f53e-11ec-af28-7f55075397fd.jpeg?v=1&type=image"><br><img src="/css_md_files/60a74610-f540-11ec-af28-7f55075397fd.jpeg?v=1&type=image"><br><img src="/css_md_files/b2521a80-f540-11ec-af28-7f55075397fd.jpeg?v=1&type=image"><br>逗号隔开，的共同属性<br><img src="/css_md_files/6f427b30-f541-11ec-af28-7f55075397fd.jpeg?v=1&type=image"><br>如果一个标签具有多个类的选择器，那么我们想要要求同时满足的时候才会变大<br><img src="/css_md_files/b9b908f0-f546-11ec-af28-7f55075397fd.jpeg?v=1&type=image"><br><img src="/css_md_files/cc8c5ef0-f546-11ec-af28-7f55075397fd.jpeg?v=1&type=image"><br><img src="/css_md_files/849cc1d0-f54f-11ec-af28-7f55075397fd.jpeg?v=1&type=image"><br><img src="/css_md_files/99a5bc80-f54f-11ec-af28-7f55075397fd.jpeg?v=1&type=image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;css是按照步骤去渲染的，如果有同一属性给了值，那么按照从上到下的顺序进行覆盖&lt;br&gt;我们所知的伪选择器就是状态选择器对于一个元素状态的定义&lt;br&gt;for example：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>动态规划</title>
    <link href="https://blog.rkwcloud.com/2022/06/25/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    <id>https://blog.rkwcloud.com/2022/06/25/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</id>
    <published>2022-06-24T17:06:46.000Z</published>
    <updated>2022-06-24T17:13:06.337Z</updated>
    
    <content type="html"><![CDATA[<h3 id="剑指-Offer-II-091-粉刷房子"><a href="#剑指-Offer-II-091-粉刷房子" class="headerlink" title="剑指 Offer II 091. 粉刷房子"></a><a href="https://leetcode.cn/problems/JEj789/">剑指 Offer II 091. 粉刷房子</a></h3><p>假如有一排房子，共 n 个，每个房子可以被粉刷成红色、蓝色或者绿色这三种颜色中的一种，你需要粉刷所有的房子并且使其相邻的两个房子颜色不能相同。</p><p>当然，因为市场上不同颜色油漆的价格不同，所以房子粉刷成不同颜色的花费成本也是不同的。每个房子粉刷成不同颜色的花费是以一个 n x 3 的正整数矩阵 costs 来表示的。</p><p>例如，costs[0][0] 表示第 0 号房子粉刷成红色的成本花费；costs[1][2] 表示第 1 号房子粉刷成绿色的花费，以此类推。</p><p>请计算出粉刷完所有房子最少的花费成本。<br>示例 1：</p><ul><li>输入: costs &#x3D; [[17,2,17],[16,16,5],[14,3,19]]<br>输出: 10<br>解释: 将 0 号房子粉刷成蓝色，1 号房子粉刷成绿色，2 号房子粉刷成蓝色。<br>   最少花费: 2 + 5 + 3 &#x3D; 10。</li></ul><p>示例 2：</p><ul><li>输入: costs &#x3D; [[7,6,2]]<br>输出: 2</li></ul><p>提示:</p><ul><li>costs.length &#x3D;&#x3D; n<br>costs[i].length &#x3D;&#x3D; 3<br>1 &lt;&#x3D; n &lt;&#x3D; 100<br>1 &lt;&#x3D; costs[i][j] &lt;&#x3D; 20</li></ul><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><h5 id="f-i-j-——-gt-i代表考虑到哪个房子，j表示选择那号，值表示选择这种方式最小的花费"><a href="#f-i-j-——-gt-i代表考虑到哪个房子，j表示选择那号，值表示选择这种方式最小的花费" class="headerlink" title="f[i][j]——-&gt; i代表考虑到哪个房子，j表示选择那号，值表示选择这种方式最小的花费"></a>f[i][j]——-&gt; i代表考虑到哪个房子，j表示选择那号，值表示选择这种方式最小的花费</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span>  <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">minCost</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp;  costs)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> x = costs.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>  f[<span class="number">3000</span>][<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span>;i++)</span><br><span class="line"></span><br><span class="line">f[<span class="number">0</span>][i] = costs[<span class="number">0</span>][i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; x ; i ++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">3</span> ; j ++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">f[i][j] = <span class="built_in">min</span>(f[i <span class="number">-1</span>][(j + <span class="number">1</span>)%<span class="number">3</span>],f[i - <span class="number">1</span>][(j + <span class="number">2</span>)%<span class="number">3</span>]) + costs[i][j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span>; i ++)</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">ans = <span class="built_in">min</span>(ans,f[x<span class="number">-1</span>][i]);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;剑指-Offer-II-091-粉刷房子&quot;&gt;&lt;a href=&quot;#剑指-Offer-II-091-粉刷房子&quot; class=&quot;headerlink&quot; title=&quot;剑指 Offer II 091. 粉刷房子&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>BFS归纳</title>
    <link href="https://blog.rkwcloud.com/2022/06/25/BFS%E5%BD%92%E7%BA%B3/"/>
    <id>https://blog.rkwcloud.com/2022/06/25/BFS%E5%BD%92%E7%BA%B3/</id>
    <published>2022-06-24T16:16:27.000Z</published>
    <updated>2022-06-24T16:19:03.623Z</updated>
    
    <content type="html"><![CDATA[<h3 id="515-在每个树行中找最大值"><a href="#515-在每个树行中找最大值" class="headerlink" title="515. 在每个树行中找最大值"></a><a href="https://leetcode.cn/problems/find-largest-value-in-each-tree-row/">515. 在每个树行中找最大值</a></h3><h4 id="给定一棵二叉树的根节点-root-，请找出该二叉树中每一层的最大值。"><a href="#给定一棵二叉树的根节点-root-，请找出该二叉树中每一层的最大值。" class="headerlink" title="给定一棵二叉树的根节点 root ，请找出该二叉树中每一层的最大值。"></a>给定一棵二叉树的根节点 root ，请找出该二叉树中每一层的最大值。</h4><p>示例1：<br><img src="/image/BFS%E5%BD%92%E7%BA%B3_md_files/43c01f80-f3d9-11ec-9146-996f1ecf0d30.jpeg?v=1&type=image"></p><ul><li><p>输入: root &#x3D; [1,3,2,5,3,null,9]<br>输出: [1,3,9]<br>示例2：</p></li><li><p>输入: root &#x3D; [1,2,3]<br>输出: [1,3]</p></li></ul><p>提示：</p><ul><li>二叉树的节点个数的范围是 [0,104]</li><li>231 &lt;&#x3D; Node.val &lt;&#x3D; 231 - 1<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* int val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* TreeNode *left;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* TreeNode *right;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* TreeNode() : val(0), left(nullptr), right(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* TreeNode(int x) : val(x), left(nullptr), right(nullptr) &#123;&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) &#123;&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* &#125;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span>  <span class="title class_">Solution</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">largestValues</span><span class="params">(TreeNode*  root)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">queue&lt;TreeNode*&gt; q;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> maxt = <span class="number">-0x3f3f3f3f</span> ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(root == <span class="literal">nullptr</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">q.<span class="built_in">push</span>(root);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line"></span><br><span class="line">&#123; maxt = q.<span class="built_in">front</span>()-&gt;val;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> size = q.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(size -- &gt; <span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(t-&gt;left != <span class="literal">nullptr</span>) q.<span class="built_in">push</span>(t-&gt;left);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(t-&gt;right != <span class="literal">nullptr</span>) q.<span class="built_in">push</span>(t-&gt;right);</span><br><span class="line"></span><br><span class="line">maxt = <span class="built_in">max</span>(maxt,t-&gt;val);</span><br><span class="line"></span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ans.<span class="built_in">push_back</span>(maxt);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;515-在每个树行中找最大值&quot;&gt;&lt;a href=&quot;#515-在每个树行中找最大值&quot; class=&quot;headerlink&quot; title=&quot;515. 在每个树行中找最大值&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode.cn/problems/find-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>这居然只是个管理系统</title>
    <link href="https://blog.rkwcloud.com/2022/06/24/%E8%BF%99%E5%B1%85%E7%84%B6%E5%8F%AA%E6%98%AF%E4%B8%AA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>https://blog.rkwcloud.com/2022/06/24/%E8%BF%99%E5%B1%85%E7%84%B6%E5%8F%AA%E6%98%AF%E4%B8%AA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-06-24T13:41:05.000Z</published>
    <updated>2022-06-24T13:42:58.180Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/image/%E8%BF%99%E5%B1%85%E7%84%B6%E5%8F%AA%E6%98%AF%E4%B8%AA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F_md_files/50e9e1c0-f3c3-11ec-a4a2-e710ed804c27.jpeg?v=1&type=image"><br>对，这可不是什么window桌面，就是一个完整的管理系统，ohh ，太强了，emm,可惜不是我写的</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/image/%E8%BF%99%E5%B1%85%E7%84%B6%E5%8F%AA%E6%98%AF%E4%B8%AA%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F_md_files/50e9e1c0-f3c3-11ec-a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>blog编辑中心</title>
    <link href="https://blog.rkwcloud.com/2022/06/24/blog%E7%BC%96%E8%BE%91%E8%AF%B4%E6%98%8E%E6%89%8B%E5%86%8C/"/>
    <id>https://blog.rkwcloud.com/2022/06/24/blog%E7%BC%96%E8%BE%91%E8%AF%B4%E6%98%8E%E6%89%8B%E5%86%8C/</id>
    <published>2022-06-24T12:34:22.000Z</published>
    <updated>2022-06-24T01:32:35.420Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://butterfly.js.org/posts/dc584b87/#Post-Front-matter">来源</a><br><img src="/image/blog%E7%BC%96%E8%BE%91%E8%AF%B4%E6%98%8E%E6%89%8B%E5%86%8C_md_files/27be9c50-f125-11ec-b599-8b4f4614c866.jpeg?v=1&type=image"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">--- </span><br><span class="line">title: </span><br><span class="line">date: </span><br><span class="line">updated: </span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">keywords: </span><br><span class="line">description: </span><br><span class="line">top _img: </span><br><span class="line">comments: </span><br><span class="line">cover: </span><br><span class="line">toc: </span><br><span class="line">toc_ number: </span><br><span class="line">toc _style_ simple: </span><br><span class="line">copyright: </span><br><span class="line">copyright _author: </span><br><span class="line">copyright_ author _href: </span><br><span class="line">copyright_ url: </span><br><span class="line">copyright _info: </span><br><span class="line">mathjax: </span><br><span class="line">katex: </span><br><span class="line">aplayer: </span><br><span class="line">highlight_ shrink: </span><br><span class="line">aside: </span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="友链"><a href="#友链" class="headerlink" title="友链"></a>友链</h2><ul><li>在Hexo博客目录中的source&#x2F;_data（如果没有 _data 文件夹，请自行创建），创建一个文件link.yml</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://butterfly.js.org/posts/dc584b87/#Post-Front-matter&quot;&gt;来源&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/image/blog%E7%BC%96%E8%BE%91%E8%AF%B4%E6%98%8E%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>大废物</title>
    <link href="https://blog.rkwcloud.com/2022/06/24/%E5%A4%A7%E5%BA%9F%E7%89%A9/"/>
    <id>https://blog.rkwcloud.com/2022/06/24/%E5%A4%A7%E5%BA%9F%E7%89%A9/</id>
    <published>2022-06-24T11:40:18.000Z</published>
    <updated>2022-06-24T11:40:50.884Z</updated>
    
    <content type="html"><![CDATA[<p>躺下不想睡，做起就困</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;躺下不想睡，做起就困&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>小游戏</title>
    <link href="https://blog.rkwcloud.com/2022/06/24/%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <id>https://blog.rkwcloud.com/2022/06/24/%E5%B0%8F%E6%B8%B8%E6%88%8F/</id>
    <published>2022-06-24T10:33:29.000Z</published>
    <updated>2022-06-24T10:52:22.449Z</updated>
    
    <content type="html"><![CDATA[<p>这是一款贪吃蛇小游戏，玩家通过w s a d或者方向键控制贪吃蛇吃到Apple,以获得更多得分为目的<br>目前暂不支持ios系统</p><h1 id="点我开始游戏"><a href="#点我开始游戏" class="headerlink" title="点我开始游戏"></a><a href="https://www.rkwcloud.com/snake/">点我开始游戏</a></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这是一款贪吃蛇小游戏，玩家通过w s a d或者方向键控制贪吃蛇吃到Apple,以获得更多得分为目的&lt;br&gt;目前暂不支持ios系统&lt;/p&gt;
&lt;h1 id=&quot;点我开始游戏&quot;&gt;&lt;a href=&quot;#点我开始游戏&quot; class=&quot;headerlink&quot; title=&quot;点我开始游戏&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://blog.rkwcloud.com/2022/06/24/%E6%BC%94%E8%AE%B2%E7%9A%84%E6%8A%80%E5%B7%A7/"/>
    <id>https://blog.rkwcloud.com/2022/06/24/%E6%BC%94%E8%AE%B2%E7%9A%84%E6%8A%80%E5%B7%A7/</id>
    <published>2022-06-24T10:14:48.157Z</published>
    <updated>2022-06-16T10:25:08.551Z</updated>
    
    <content type="html"><![CDATA[<p>不要准备逐字稿，而要准备大纲，<br>逻辑思维，结构化思维，why<br>SCQA（对于如何看待）<br>背景+冲突+问题+方案和看法<br>RIDE原则(接收对方建议的表达准则)<br>风险+利益+差异+影响（负面的）<br>PREP（个人介绍）<br>抛出观点，结论先行，（理由1,2）体现逻辑性，最后强调一下自己的观点<br>黄金圈法则<br>Why(想要解决什么问题),How（则么做）,What（这样做了会达到什么样的效果）<br>时间轴法则（讲事实，讲自己的想法）（自己履历或是对某个事件的解读上）<br>不同的事务，和什么联系起来</p><h2 id="过于关注自己，没必要在意别人的眼光，没必要太多负担和压力"><a href="#过于关注自己，没必要在意别人的眼光，没必要太多负担和压力" class="headerlink" title="过于关注自己，没必要在意别人的眼光，没必要太多负担和压力"></a>过于关注自己，没必要在意别人的眼光，没必要太多负担和压力</h2><p>1.别人想听什么，换位思考<br>2.将自己做一下分享<br>-</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不要准备逐字稿，而要准备大纲，&lt;br&gt;逻辑思维，结构化思维，why&lt;br&gt;SCQA（对于如何看待）&lt;br&gt;背景+冲突+问题+方案和看法&lt;br&gt;RIDE原则(接收对方建议的表达准则)&lt;br&gt;风险+利益+差异+影响（负面的）&lt;br&gt;PREP（个人介绍）&lt;br&gt;抛出观点，结论先行</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Gallery</title>
    <link href="https://blog.rkwcloud.com/2022/06/24/Gallery/"/>
    <id>https://blog.rkwcloud.com/2022/06/24/Gallery/</id>
    <published>2022-06-24T09:38:35.000Z</published>
    <updated>2022-06-24T09:39:25.372Z</updated>
    
    <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/Gallery/ohmygirl'></a>  </figcaption>  </figure>  </div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;gallery-group-main&quot;&gt;

  &lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img no-lightbox&quot; src=&#39;https://i.loli.net/2019</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>网页考试有感</title>
    <link href="https://blog.rkwcloud.com/2022/06/24/%E7%BD%91%E9%A1%B5%E8%80%83%E8%AF%95%E6%9C%89%E6%84%9F/"/>
    <id>https://blog.rkwcloud.com/2022/06/24/%E7%BD%91%E9%A1%B5%E8%80%83%E8%AF%95%E6%9C%89%E6%84%9F/</id>
    <published>2022-06-24T04:35:08.000Z</published>
    <updated>2022-06-24T04:36:59.431Z</updated>
    
    <content type="html"><![CDATA[<h3 id="真的我不理解，这种网页考试真的很mmp"><a href="#真的我不理解，这种网页考试真的很mmp" class="headerlink" title="真的我不理解，这种网页考试真的很mmp"></a>真的我不理解，这种网页考试真的很mmp</h3><p><img src="/image/%E7%BD%91%E9%A1%B5%E8%80%83%E8%AF%95%E6%9C%89%E6%84%9F_md_files/42c55850-f377-11ec-b727-4515fe6c885e.jpeg?v=1&type=image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;真的我不理解，这种网页考试真的很mmp&quot;&gt;&lt;a href=&quot;#真的我不理解，这种网页考试真的很mmp&quot; class=&quot;headerlink&quot; title=&quot;真的我不理解，这种网页考试真的很mmp&quot;&gt;&lt;/a&gt;真的我不理解，这种网页考试真的很mmp&lt;/h3&gt;&lt;p&gt;&lt;i</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>你好</title>
    <link href="https://blog.rkwcloud.com/2022/06/24/%E4%BD%A0%E5%A5%BD/"/>
    <id>https://blog.rkwcloud.com/2022/06/24/%E4%BD%A0%E5%A5%BD/</id>
    <published>2022-06-24T01:34:46.000Z</published>
    <updated>2022-06-24T01:35:26.359Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://butterfly.js.org/posts/dc584b87/#Post-Front-matter">来源</a><br><img src="/image/blog%E7%BC%96%E8%BE%91%E8%AF%B4%E6%98%8E%E6%89%8B%E5%86%8C_md_files/27be9c50-f125-11ec-b599-8b4f4614c866.jpeg?v=1&type=image"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://butterfly.js.org/posts/dc584b87/#Post-Front-matter&quot;&gt;来源&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;/image/blog%E7%BC%96%E8%BE%91%E8%AF%B4%E6%98%8E%</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>开始测试</title>
    <link href="https://blog.rkwcloud.com/2022/06/23/%E5%BC%80%E5%A7%8B%E6%B5%8B%E8%AF%95/"/>
    <id>https://blog.rkwcloud.com/2022/06/23/%E5%BC%80%E5%A7%8B%E6%B5%8B%E8%AF%95/</id>
    <published>2022-06-23T12:34:22.000Z</published>
    <updated>2022-06-23T13:41:08.159Z</updated>
    
    <content type="html"><![CDATA[<ul><li>想睡饱</li><li>开心</li><li>懒</li><li>躺平</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;想睡饱&lt;/li&gt;
&lt;li&gt;开心&lt;/li&gt;
&lt;li&gt;懒&lt;/li&gt;
&lt;li&gt;躺平&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
